using utils.TestRunner;

monitor Test {  
	action onload() {
		TestRunner.create()
			.addTest("!true", new sequence<any>, false, "!true")
			.addTest("!false", new sequence<any>, true, "!false")
			.addTest("not true", new sequence<any>, false, "not true")
			.addTest("not false", new sequence<any>, true, "not false")
		
			.addTest("10 = 10", new sequence<any>, true, "Integer equals true")
			.addTest("10 = 11", new sequence<any>, false, "Integer equals false")
			.addTest("10.0 = 10.0", new sequence<any>, true, "Float equals true")
			.addTest("10.0 = 11.0", new sequence<any>, false, "Float equals false")
			.addTest("10.0d = 10.0d", new sequence<any>, true, "Decimal equals true")
			.addTest("10.0d = 11.0d", new sequence<any>, false, "Decimal equals false")
			.addTest("10 = 10.0d", new sequence<any>, true, "integer equals decimal true")
			.addTest("10 = 11.0d", new sequence<any>, false, "integer equals decimal false")
			.addTest("10 = 10.0", new sequence<any>, true, "integer equals float true")
			.addTest("10 = 11.0", new sequence<any>, false, "integer equals float false")
			.addTest("10 = 10.0d", new sequence<any>, true, "float equals decimal true")
			.addTest("10 = 11.0d", new sequence<any>, false, "float equals decimal false")
			.addTest("'Hello' = \"Hello\"", new sequence<any>, true, "string equals true")
			.addTest("'Hello' = \"World\"", new sequence<any>, false, "string equals false")
			.addTest("[1,2,3] = [1,2,3]", new sequence<any>, true, "seq equals true")
			.addTest("[1,2,3] = [3,2,1]", new sequence<any>, false, "seq equals false")
			
			.addTest("10 != 10", new sequence<any>, false, "Integer nequals false")
			.addTest("10 != 11", new sequence<any>, true, "Integer nequals true")
			.addTest("10.0 != 10.0", new sequence<any>, false, "Float nequals false")
			.addTest("10.0 != 11.0", new sequence<any>, true, "Float nequals true")
			.addTest("10.0d != 10.0d", new sequence<any>, false, "Decimal nequals false")
			.addTest("10.0d != 11.0d", new sequence<any>, true, "Decimal nequals true")
			.addTest("10 != 10.0d", new sequence<any>, false, "integer nequals decimal false")
			.addTest("10 != 11.0d", new sequence<any>, true, "integer nequals decimal true")
			.addTest("10 != 10.0", new sequence<any>, false, "integer nequals float false")
			.addTest("10 != 11.0", new sequence<any>, true, "integer nequals float true")
			.addTest("10 != 10.0d", new sequence<any>, false, "float nequals decimal false")
			.addTest("10 != 11.0d", new sequence<any>, true, "float nequals decimal true")
			.addTest("'Hello' != \"Hello\"", new sequence<any>, false, "string nequals false")
			.addTest("'Hello' != \"World\"", new sequence<any>, true, "string nequals true")
			.addTest("[1,2,3] != [1,2,3]", new sequence<any>, false, "seq nequals false")
			.addTest("[1,2,3] != [3,2,1]", new sequence<any>, true, "seq nequals true")

			.addTest("11 >= 10", new sequence<any>, true, "Integer above gteq true")
			.addTest("10 >= 10", new sequence<any>, true, "Integer equal gteq true")
			.addTest("10 >= 11", new sequence<any>, false, "Integer below gteq false")
			.addTest("11.0 >= 10.0", new sequence<any>, true, "Float above gteq true")
			.addTest("10.0 >= 10.0", new sequence<any>, true, "Float equal gteq true")
			.addTest("10.0 >= 11.0", new sequence<any>, false, "Float below gteq false")
			.addTest("11.0d >= 10.0d", new sequence<any>, true, "Decimal above gteq true")
			.addTest("10.0d >= 10.0d", new sequence<any>, true, "Decimal equal gteq true")
			.addTest("10.0d >= 11.0d", new sequence<any>, false, "Decimal below gteq false")
			.addTest("11 >= 10.0d", new sequence<any>, true, "Integer above decimal gteq true")
			.addTest("10 >= 10.0d", new sequence<any>, true, "Integer equals decimal gteq true")
			.addTest("10 >= 11.0d", new sequence<any>, false, "Integer below decimal gteq false")
			.addTest("11 >= 10.0", new sequence<any>, true, "Integer above float gteq true")
			.addTest("10 >= 10.0", new sequence<any>, true, "Integer equals float gteq true")
			.addTest("10 >= 11.0", new sequence<any>, false, "Integer below float gteq false")
			.addTest("11.0 >= 10.0d", new sequence<any>, true, "float above decimal gteq true")
			.addTest("10.0 >= 10.0d", new sequence<any>, true, "float equals decimal gteq true")
			.addTest("10.0 >= 11.0d", new sequence<any>, false, "float below decimal gteq false")
	
			.addTest("11 > 10", new sequence<any>, true, "Integer above gt true")
			.addTest("10 > 10", new sequence<any>, false, "Integer equal gt false")
			.addTest("10 > 11", new sequence<any>, false, "Integer below gt false")
			.addTest("11.0 > 10.0", new sequence<any>, true, "Float above gt true")
			.addTest("10.0 > 10.0", new sequence<any>, false, "Float equal gt false")
			.addTest("10.0 > 11.0", new sequence<any>, false, "Float below gt false")
			.addTest("11.0d > 10.0d", new sequence<any>, true, "Decimal above gt true")
			.addTest("10.0d > 10.0d", new sequence<any>, false, "Decimal equal gt false")
			.addTest("10.0d > 11.0d", new sequence<any>, false, "Decimal below gt false")
			.addTest("11 > 10.0d", new sequence<any>, true, "Integer above decimal gt true")
			.addTest("10 > 10.0d", new sequence<any>, false, "Integer equals decimal gt false")
			.addTest("10 > 11.0d", new sequence<any>, false, "Integer below decimal gt false")
			.addTest("11 > 10.0", new sequence<any>, true, "Integer above float gt true")
			.addTest("10 > 10.0", new sequence<any>, false, "Integer equals float gt false")
			.addTest("10 > 11.0", new sequence<any>, false, "Integer below float gt false")
			.addTest("11.0 > 10.0d", new sequence<any>, true, "float above decimal gt true")
			.addTest("10.0 > 10.0d", new sequence<any>, false, "float equals decimal gt false")
			.addTest("10.0 > 11.0d", new sequence<any>, false, "float below decimal gt false")
		
			.addTest("11 <= 10", new sequence<any>, false, "Integer above lteq false")
			.addTest("10 <= 10", new sequence<any>, true, "Integer equal lteq true")
			.addTest("10 <= 11", new sequence<any>, true, "Integer below lteq true")
			.addTest("11.0 <= 10.0", new sequence<any>, false, "Float above lteq false")
			.addTest("10.0 <= 10.0", new sequence<any>, true, "Float equal lteq true")
			.addTest("10.0 <= 11.0", new sequence<any>, true, "Float below lteq true")
			.addTest("11.0d <= 10.0d", new sequence<any>, false, "Decimal above lteq false")
			.addTest("10.0d <= 10.0d", new sequence<any>, true, "Decimal equal lteq true")
			.addTest("10.0d <= 11.0d", new sequence<any>, true, "Decimal below lteq true")
			.addTest("11 <= 10.0d", new sequence<any>, false, "Integer above decimal lteq false")
			.addTest("10 <= 10.0d", new sequence<any>, true, "Integer equals decimal lteq true")
			.addTest("10 <= 11.0d", new sequence<any>, true, "Integer below decimal lteq true")
			.addTest("11 <= 10.0", new sequence<any>, false, "Integer above float lteq false")
			.addTest("10 <= 10.0", new sequence<any>, true, "Integer equals float lteq true")
			.addTest("10 <= 11.0", new sequence<any>, true, "Integer below float lteq true")
			.addTest("11.0 <= 10.0d", new sequence<any>, false, "float above decimal lteq false")
			.addTest("10.0 <= 10.0d", new sequence<any>, true, "float equals decimal lteq true")
			.addTest("10.0 <= 11.0d", new sequence<any>, true, "float below decimal lteq true")
	
			.addTest("11 < 10", new sequence<any>, false, "Integer above lt false")
			.addTest("10 < 10", new sequence<any>, false, "Integer equal lt false")
			.addTest("10 < 11", new sequence<any>, true, "Integer below lt true")
			.addTest("11.0 < 10.0", new sequence<any>, false, "Float above lt false")
			.addTest("10.0 < 10.0", new sequence<any>, false, "Float equal lt false")
			.addTest("10.0 < 11.0", new sequence<any>, true, "Float below lt true")
			.addTest("11.0d < 10.0d", new sequence<any>, false, "Decimal above lt false")
			.addTest("10.0d < 10.0d", new sequence<any>, false, "Decimal equal lt false")
			.addTest("10.0d < 11.0d", new sequence<any>, true, "Decimal below lt true")
			.addTest("11 < 10.0d", new sequence<any>, false, "Integer above decimal lt false")
			.addTest("10 < 10.0d", new sequence<any>, false, "Integer equals decimal lt false")
			.addTest("10 < 11.0d", new sequence<any>, true, "Integer below decimal lt true")
			.addTest("11 < 10.0", new sequence<any>, false, "Integer above float lt false")
			.addTest("10 < 10.0", new sequence<any>, false, "Integer equals float lt false")
			.addTest("10 < 11.0", new sequence<any>, true, "Integer below float lt true")
			.addTest("11.0 < 10.0d", new sequence<any>, false, "float above decimal lt false")
			.addTest("10.0 < 10.0d", new sequence<any>, false, "float equals decimal lt false")
			.addTest("10.0 < 11.0d", new sequence<any>, true, "float below decimal lt true")

			.addTest("true and true", new sequence<any>, true, "And true")
			.addTest("true and false", new sequence<any>, false, "And false")
			
			.addTest("true xor false", new sequence<any>, true, "xor true")
			.addTest("true xor true", new sequence<any>, false, "xor false")
	
			.addTest("true or false", new sequence<any>, true, "or true")
			.addTest("false or false", new sequence<any>, false, "or false")
		
			.addTest("!false and not false and 1 = 1 and 5 > 3 xor 2 < 9 or 5 > 3", new sequence<any>, true, "Simple Operator Precedence")
		
			.run();
	}  
}
